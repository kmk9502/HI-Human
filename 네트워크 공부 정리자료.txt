###네트워크의 개념
: 무언가와 무언가가 그물망처럼 무언가에 의해 연결되어 무언가를 
운반하기 위한 것을 말한다. 더 자세히 말하자면 '점과 점이 선으로 그물망처럼 연결되어 
있다'고 표현할 수도 있다. 물론, 점과 선은 경우에 따라 달라진다.

+ 컴퓨터에 대입하면 컴퓨터와 컴퓨터가 그물망처럼 통신 매체로 연결되어 데이터를 
운반하는 것을 말한다.

###컴퓨터 네트워크의 장점
: 자신의 컴퓨터가 아닌 다른 컴퓨터와 연결되어 
리소스를 공유함으로써 한 대의 컴퓨터로는 할 수 없었던 일이 가능하도록 하고, 한 곳에
통합함으로써 효율적으로 작업할 수 있다.

###리소스 공유 방법
: 데이터 통신으로 컴퓨터가 가진 리소스를 서로 주고받음으로써
공유한다. 

###Point
-컴퓨터 네트워크는 컴퓨터와 통신 매체, 데이터로 이루어진다.
-리소스를 공유하는 것이 네트워크의 장점이다.
-데이터를 주고받음으로써 리소스를 공유한다.
***
###이 책에서 정의하는 데이터의 개념
: 무언가에 대한 정보를 컴퓨터상에서 표현한 것.

Q: 무언가에 대한 정보? 리소스의 공유랑 무슨 관계인가?
A: 여기서 말하는 '정보'란 파일, 인쇄하는 내용 등 리소스를 공유하기 위해 사용하는 정보
   를 뜻한다.
   + 리소스 공유를 위한 정보

데이터의 구성단위: 비트(Bit)
		   -'네'나'아니요', 혹은'0'이나'1'이라는 정보이다. 즉 1비트면 
		    '0'또는'1'의 정보를 저장하는 식이다.

###데이터 통신 간단 정리
: 송신측에서 보내고자 하는 데이터를 파이프(통신 매체)를 통해 보내면 
수신측에 도달한다.

###인터페이스
: 컴퓨터에 파이프(통신 매체)를 연결할 때 필요한 접속구, 즉 2개의 서로 다른 시스템
사이에 존재하며 정보의 송수신을 중계하는 역할을 맡고 있다.

###프로토콜
: 비트로 표현된 데이터를 '통일된 방법'으로 해석하기 위해 데이터를 주고받기 위한 규칙이다.
따라서 송신자와 수신자가 같은 프로토콜을 사용해야 정상적인 통신이 가능해진다.

###Point
-주고받는 정보는 비트로 표현된다.
-데이터를 주고받는 데이터 통신을 하기 위해서는 기기와 프로토콜이 필요하다.
-프로토콜이란 데이터 통신상에서의 규칙이다.
***
더 많은 컴퓨터와 데이터 통신을 하고 싶으면 연결하고픈 컴퓨터의 수만큼 파이프를 
늘리면 된다. 그런데, 전화의 경우에는 하나의 전화선을 거쳐 하나의 상대와 연결되는 것이
아닌 복수의 사람과 연결될 수 있다. 그 이유는 무엇일까?

###교환기
: 파이프가 감당할 수 없을 정도로 증가하는 것을 막기 위해 적은 파이프로도 다수의 접속이
가능하도록 만든 네트워크 기기이다. 이 기기는 각각의 전화가 '교환기에만' 연결 가능하게 하여 
같은 회선을 사용해 다른 상대방과 접속하고 싶을 때 교환기와 교환기 사이의 회선을 교체해서
다른 상대와 접소하도록 설계되었다.

###교환기의 단점
: 교환기가 수용할 수 있는한에서 통신이 이루어질 수 있다.

###교환기의 단점에 대한 해결책
: 패킷 교환 
패킷 교환은 송신할 데이터를 여럿으로 분할해 송신하는 방법이다.
여럿으로 분할했기 때문에 패킷 1개를 보내는 시간이 짧아지고, 회선을 점유하는 
시간 또한 짧아지게 된다. 그에 따라 패킷과 패킷 사이에 다른 패킷을 넣을 수 있게 되어
서로 다른 복수의 패킷이 한 개의 회선을 사용할 수 있게 된다.
Q: 그렇게 패킷이 섞이면 수신받는 쪽에서 혼란이 오지 않을까?
A: 그러한 혼란을 막기위해 각각의 패킷에 수신처가 붙어있어 올바른 수신처를 찾아갈 수 있다.

###정리
: 패킷 교환기는 수신처가 연결되어 있는 회선을 골라서 거기로 패킷을 송출하는 
역할과 사용하려고 한 회선이 사용중일 경우 일시적으로 저장했다가 회선이 비는 것을 
기다리는 역할을 하는 것이다.

###패킷 교환의 단점
: 패킷 교환 방식은 패킷마다 따로따로 송신하기 때문에 반드시 송신한 
순서대로 수신처에 도달한다고 할 수 없고, 도착 시간이 불규칙할 수도 있다.

###패킷 교환의 장점
: 복수의 컴퓨터의 패킷이 한 개의 회선을 사용할 수 있어 효율적이다.
이러한 장점으로 컴퓨터 네트워크에서 패킷 교환 방식이 사용된다.

###Point
-데이터 통신에는 회선 교환과 패킷 교환이 있다.
-회선 교환은 '파이프'를 교체하는 방식이다.
-패킷 교환은 '패킷'으로 분할해서 송신하는 방식이다.
-컴퓨터 네트워크는 패킷 교환 방식이다.
***
###패킷 교환 네트워크에서 필요한 기기
: 패킷 교환기(라우터)

###패킷 교환 네트워크 모델
: 컴퓨터A ㅡ 라우터A ㅡ 라우터B ㅡ 컴퓨터B

###세그먼트
: 라우터를 거치지 않고 케이블 분배기로 연결되는 범위
-세그먼트 범위 내에 있는 컴퓨터는 패킷 교환 없이 T자로 나뉜 분배기를 통해 직접 데이터를 송수신할 수 있다.

그러나 케이블에 T자 분배기를 만들기 위한 과정은 번거롭다.
이런 단점을 극복하고자 허브(Hub)라는 기기를 사용한다.

###허브
: 컴퓨터 한 대가 세그먼트 내의 어떤 컴퓨터에도 자유롭게 데이터를 송신할 수 있게 하는
네트워크 기기이다. T자 분배기와 같은 역할을 하지만 포트를 연결하기만 하면 네트워크가 형성되고,
신호가 허브에 들어올 때 신호를 증폭시키는 역할도 한다. 

###멀티액세스 네트워크
: 한 대의 컴퓨터가 아닌 다수의 컴퓨터와 연결된 상태.
PtP 네트워크: Point to Point 네트워크의 약자이며 한 대의 컴퓨터가 한 대의 컴퓨터에만 
연결되어 있는 상태를 뜻한다. 이른바 전용선이라고 불린다. 

	      세그먼트 범위 내의 네트워크 구조

				         허브
				          I 
		     	 IㅡㅡㅡIㅡㅡㅡIㅡㅡㅡI
		     	PC1   PC2   서버  라우터
###Point
-패킷 교환 네트워크는 컴퓨터, 통신 매체, 인터페이스, 라우터로 이루어진다.
-네트워크에는 멀티엑세스 네트워크와 포인트 투 포인트 네트워크의 두 종류가 있다.
-이 두 종류가 조합되어 네트워크 전체가 구성된다.
***
###네트워크를 구조 면에서 분류한 것
: 멀티엑세스 네트워크와 포인트 투 포인트 네트워크 등
###네트워크의 범위나 규모 면에서 분류한 것
: LAN, WAN 등

###LAN이란?
-정식 명칭: Local Area Network
-좁은 범위의 네트워크. 구체적으로는 구내(EX>가정, 사무실, 빌딩 등)에 설치되어 그곳을 범위로 지정하여 사용하는 네트워크
-'범위'의 의미가 구체적이지는 않지만 LAN 네트워크를 사용하는 쪽에서 자신들이 책임지고 사용할 네트워크를 만드는 것이므로 어느 정도는 자유롭게 만들 수 있다. 따라서 구체적이지 않을 수밖에 없다.

###정리
: LAN은 '지역적으로 좁은 범위'에서 '본인이 책임지고 구축'하는 네트워크이다.

###WAN이란?
-정식 명칭: Wide Area Network
-LAN은 확실히 편리하기는 하지만 좁은 범위의 네트워크이기에 공유되는 리소스가 적어 효율이 좋지 않다. 따라서 좁은 범위에서 벗어나 다른 범위의 네트워크에 접속하여 더 많은 리소스를 공유해야 하는데, 이때 사용되는 것이 바로 WAN이다.
-WAN은 넓은 범위의 네트워크를 뜻한다. 구체적으로는 LAN과 LAN 사이를 연결하는 네트워크이다. 
-WAN은 LAN과 LAN 사이를 연결하기 위해 도로 같은 공공장소에 있는 케이블과 같은 통신매체를 이용하는데, 그러한 통신매체를 이용하기 위해서는 나라의 허가를 받아 통신용 케이블을 설치하는 회사인 통신사업자에게서 그들이 보유하고 있는 케이블에 데이터를 전송할 권리를 구입해야 한다. 
-광범위한 네트워크를 구축할 수 있는 통신매체를 사용하기 때문에 WAN은 LAN에서 취급할 수 없는 범위, 즉 도시나 지역, 경우에 따라서는 국가간을 가로지르는 네트워크를 만들 수도 있다. 
-WAN은 LAN과 마찬가지로 연결한 범위에 따라 크기가 다르다. 그중에서 세계적 규모로 사용되는 WAN이 바로 인터넷이다.

###정리
: WAN은 떨어져 있는 지역의 LAN끼리 통신 사업자의 통신 케이블을 빌려서 연결한 네트워크이다.

###Point
-자신의 책임으로 좁은 범위에서 만드는 것이 LAN이다.
-넓은 범위에서 통신사업자로부터 케이블을 빌려서 만들어진 것이 WAN이다.
-세계 최대 규모의 WAN은 인터넷이다.
***
###OSI 참조 모델이란?

-OSI 참조 모델은 데이터 통신의 단계 구성도. 
-데이터 통신을 단계로 나누어 각 단계의 순서를 명확히하고, 이 모델에 따라 프로토콜을 정의해서 데이터 통신을 구축하려고 한 것.

###OSI 참조 모델의 구성은?
-OSI 참조 모델은 데이터 통신을 7개의 단계로 나누는데 이 단계를 계층(혹은 Layer)이라고 부른다.
-각 계층마다 각각의 역할과 규칙이 존재한다.
| 계층 번호 | 계층 명칠 | 내용 | 계층의 비유 |
|:-----------|:-----------:|:-----------:|------------------------:|
| 제7계층 | 응용계층 | 사용자에게 네트워크 서비스를 제공한다. | |          
| 제6계층 | 표현계층 | 데이터의 형식을 결정한다. | 내용표현 |
| 제5계층 | 세션계층 | 데이터 송수신의 순서 등을 관리한다. | |
|  |  |  |  |
| 제4계층 |	전송계층 | 신뢰성이 높은(에러가 적은)전송을 시행한다. | 전송물 |						   						  
| 제3계층 |	네트워크계층 |	전송 규칙과 수신처를 결정한다. | |  	 
|  |  |  |  |
| 제2계층 |	데이터링크계층 | 인접기기 사이의 데이터 전송을 제어한다. | 전송 |
| 제1계층 |	물리계층 | 전기/기계적인 부분의 전송을 시행한다. | |

-위 표처럼 데이터 통신을 할 때는 7계층에서부터 1계층으로, 각각의 순서를 단계적으로 수행함으로써 데이터 통신이 가능해진다.

-네트워크에 의한 데이터 통신은 단계마다의 복수의 프로토콜로 실현된다. 그래서 OSI 참조 모델은 '단계와 순서의 설계도'라고 한다.

-데이터를 송신하는 쪽에서는 7계층부터 1계층까지, 수신하는 쪽은 반대로 1계층부터 7계층까지 순서대로 각 역할을 수행함으로써 데이터를 수신할 수 있게 된다.

-OSI 참조 모델의 프로토콜은 독립적이기 때문에 어떤 계층의 프로토콜 변경은 다른 계층에 영향을 끼치지 않는다. 그리고 기본적으로 하위 계층(4, 3, 2, 1계층)은 상위 계층(7, 6, 5계층)을 위해서 일하고 상위 계층은 하위 계층에 관여하지 않는다.

###Point
-데이터 통신은 OSI 참조 모델에 의한 '단계와 순서'로 이해한다.
-OSI 참조 모델은 일곱개의 계층으로 나뉘어 있으며 각각은 독립해 있다.
-하위 계층은 상위 계층을 위해 일하고 상위계층은 하위 계층에 대해 관여하지 않는다.
***
###순서의 흐름
: 택배에 비교 가능

###송신측
: 택배(패킷)로 보낼 손상되기 쉬운 물건(데이터) ㅡ 물건을 완충재로 감싼다 ㅡ 택배 상자에 넣는다 ㅡ 송신처와 수신처 등의 내용을 적는다 ㅡ 전송한다

###수신측
: 전송받은 택배의 송신처와 수신처를 확인한다 ㅡ 택배 상자를 연다 ㅡ 완충재를 벗긴다 ㅡ 물건을 확인한다

물건을 완충재로 감싸는 것 처럼 데이터와 '데이터를 보내기 위해 필요한 것'들이 통합된 상태를 
프로토콜 데이터 유닛(Protocol Data Unit: PDU)이라고 한다.

###제어 데이터의 부가
: OSI 모델의 각 계층이라는 단게를 실시할 때마다 전송할 데이터를 보내기 위해 
필요한 데이터를 부가함. 즉 '통신에 필요한 정보'를 부가한다.
4층계에서 추가되는 메세지, 3계층에서 추가되는 '세그먼트/데이터그램',그리고
2계층에서 추가되는 데이터그램이란 각 계층에서의 PDU의 호칭이다. 
간단하게 설명하자면 메세지에 4계층의 제어정보를 덧붙인 상태를 데이터그램이라고 부르는데
실제로는 그 앞에 프로토콜명을 붙여서 'TCP 세그먼트'나 'IP 데이터그램'이라고 부른다.
또는 '4계층 PDU'처럼 계층 번호를 붙여서 부르는 경우도 있다.

###PDU의 호칭

| 계층 |	호칭 | 내용 |
|:-----------|:-----------:|-------------------------:|
| 사용자 | 데이터	| 송수신하고 싶은 데이터 |
| 7계층~5계층 PDU | 메세지 | 데이터를 통신용으로 변환한 것과 7계층 헤더 |
| 4계층 PDU | 세그먼트, 데이터그램 | 메세지와 4계층 헤더 |
| 3계층 PDU | 데이터그램 | 세그먼트/데이터그램과 3계층 헤더 |
| 2계층 PDU | 프레임 | 데이터그램과 2계층 헤더(2계층 꼬리부) |
| 1계층 | 신호 | 프레임을 전송메체로 운반하기 위한 신호로 변환 |

캡슐화란?
-위와 같이 데이터에 제어정보를 덧붙여서 PDU로 완성하는 것을 캡슐화라고 한다. 그리고 수신한 쪽에서는 캡슐을 벗겨 데이터를 읽는다.

*이 캡슐화에서 추가되는 제어 데이터는 데이터 앞에 붙이면 헤더, 뒤에 붙이면 꼬리부라고 부른다.또한 헤더는 그 계층의 프로토콜명이나 계층의 번호를 붙여서 'TCP 헤더' 혹은 '4계층 헤더'라고 부른다.

###Point
-통신할 때 송신하는 것은 보내고 싶은 데이터 뿐만 아니라 제어용 정보도 필요하다.
-계층의 순서대로 헤더가 부가되어가는 것을 캡슐화라고 한다.
-수신한 쪽은 반대의 순서로 헤더를 벗겨서 데이터를 입수한다.
***
###OSI 참조 모델과 캡슐화의 공통적인 요소
:'프로토콜'

###인터페이스 구조
: 상위 계층 프로토콜이 하위 계층 프로토콜을 이용할 수 있는 구조를 가지고, 하위 계층 프로토콜이
  상위 계층 프로토콜에 데이터를 전송할 수 있는 구조. 
  인터페이스는 케이블과 컴퓨터의 중개역을 가리키기도 하지만 프로토콜과 프로토콜의 중개역을
  가리키기도 한다.

위와 같은 인터페이스 구조를 형성한 결과, 프로토콜 그룹이 형성된다.

###프로토콜 그룹이란?
: 완전히 제각각이 아닌 상위 프로토콜과 하위 프로토콜을 연결하는 인터페이스를 갖추고 
있으면 7계층에서 1계층까지 연결된 프로토콜 그룹이 형성된다. 이것을 프로토콜군
(Protocol Suite)이라고 부른다. 
프로토콜군은 여러 종류가 있는데, 그중 어느 프로토콜군을 사용하는지에 따라 7계층에서 
1계층까지 사용하는 프로토콜이 정해진다.

###정리
: 계층마다 프로토콜을 제멋대로 선택하는 것이 아닌, 같은 프로토콜군 중에서 계층마다 사용하는 프로토콜이 정해진다.
그리고 데이터 통신은 같은 프로토콜군을 사용하는 컴퓨터나 기기끼리만 가능하다.

###프로토콜이 결정하는 것은?
-데이터 사용 방법과 내용을 결정한다.
      -명령을 쓰는 법, 명령 다음에 파일명을 작성, 사용하는 문자 코드(문자를 비트로 변환하는 규칙)를 프로토콜이 결정한다.

-패킷에 어떤 헤더를 붙일지를 결정한다.
      -주소나 코드 등에 몇 비트를 사용할지, 배열하는 순서, 코드 및 우선도 비트가 나타내는 의미 등을 프로토콜이 결정한다.
            -헤더를 붙이는 이유는?
                  -프로토콜에는 그 프로토콜이 있는 계층의 역할에 따른 기능이 있고 그것을 실현하기 위한 정보로서 헤더를 붙인다.

-데이터를 주고받는 순서를 결정한다.
      -데이터를 보내는 순서, 그 데이터의 내용, 데이터를 받았을 때의 처리순서 등을 프로토콜이 결정
      -Ex> '잘 지내세요?'하고 보내면 '덕분에요.'라고 답한다는 식으로 정한다. 마치 TCP 프로토콜처럼

인터넷에서 가장 많이 사용되는 프로토콜군은 TCP/IP 프로토콜군이다.
TCP/IP 프로토콜군은 현재의 데이터 통신의 표준 프로토콜, 정확히 말하면 
사실표준 프로토콜이 되었다. 
*사실표준?
      -실제로 제정된 표준 규격은 아니지만 표준규격처럼 사용할 수 빆에 없는 상태가 된 것을 말한다.

###Point
-계층마다 존재하는 프로토콜 그룹을 프로토콜군이라고 한다.
-프로토콜은 '데이터의 내용을 결정'하고 '헤더를 결정'하고, '송수신 순서를 결정'한다.
-사실표준으로써 TCP/IP 프로토콜이 사용된다.
***
###TCP/IP 모델이란?
-OSI 참조 모델과 같이 '단계와 순서의 설계도'이며, TCP/IP 모델이라는 설계도에 따라 TCP/IP 프로토콜군이 만들어진다.

-현재 가장 많이 쓰이는 프로토콜, 즉 사실표준 프로토콜이다. 

TCP/IP 프로토콜의 구조를 설명하기 위해 편의상 OSI 참조 모델과 비교하곤 
하지만 실은 '두 프로토콜군은 전혀 관계가 없다.' 왜냐하면, OSI 참조 모델은 그저 
OSI 표준 프로토콜군을 만들기 위한 설계도에 불과하여 TCP/IP 프로토콜군에는 아무런
영향이 없기 때문이다. 둘은 그저 '데이터 통신'이라는 관점에서 바라볼 때 비슷한 모델
이라는 뜻이다.
Ex> OSI 참조 모델의 3계층과 TCP/IP 모델의 인터넷계층은 비슷하지만 동일하지는 않다.

-TCP/IP 프로토콜군은 총 4개의 계층으로 구성되어있다. 그리고 각 계층에는 해당 계층이 제역할을 할 수 있도록 하는 프로토콜이 존재한다. 그것을 표로 나타내면

| 계층 번호 | 계층 명칠 | 예시 |
|:-----------|:-----------:|--------------------------:|
| 4계층 | 애플리케이션계층 | HTTP(Hyper Text Protocol: 홈페이지 열람), FTP(File Transfer Protocol: 파일 전송), SMTP(Simple Mail Transfer Prtocol: 전자메일 송수신) 등 |

| 3계층 | 트랜스포트계층 | TCP(Transmission Control Protocol), UDP(User Datagram Protocol) |

| 2계층 | 인터넷계층 | IP(Interner Protocol), ARP(Address Resolution Protocol: 주소 확인 프로토콜) |

| 1계층 | 인터페이스계층 | 이더넷(Ethernet), 프레임 릴레이(Frame-Relay), PPP(Point-to Point Protocol) 등 |
으로 표현할 수 있다.

###주의할 점
: 인터페이스계층의 '이더넷'등은 정확하게 말하면 TCP/IP 프로토콜이 아니다. 단지 TCP/IP 프로토콜군이 이들 인터페이스계층의 프로토콜을 이용할 수 있다는 의미이다.

-참고:TCP/IP 프로토콜군의 핵심적인 존재로 사용되는 TCP와 IP라는 2개의 프로토콜에서 TCP/IP 프로토콜군이라는 이름이 지어졌다.

###Point
-TCP/IP 모델에서 TCP/IP 프로토콜군이 제정되었다.
-TCP/IP 모델은 4개의 계층으로 이루어진다.
***
##1계층에 대하여...

###1계층의 역할은 무엇일까?
: 케이블이 연결되어 있는 기기에 신호를 전달하는 것이 1계층의 역할이다. 즉, 1계층의 역할을 통해서 수신처에 데이터를 전달할 수 있게 된다. 
반면, 2계층부터 상위 계층은 '데이터를 보내기 전에 어떤 것을 할지','데이터가 도달한 뒤에 어떤 것을 할지'를 생각하는 것이다.

###1계층의 통신 매체
: 데이터가 지나가는 파이프 역할을 하는 통신 매체는 크게 '유선'과 '무선'으로 나뉜다.
 
-유선: 많은 곳에서 쓰이는 보편적인 통신 매체이며, 전기신호를 사용하는 동선 케이블과 광신호를 사용하는 광파이버 케이블이 있다.
	   
      -동선 케이블: 구리로 만들어진 케이블. 대표적으로 UTP를 예로 들 수 있다. UTP는 두 개가 한 쌍인 동선 네 쌍으로 이루어져 있는데, 이것이 현재 일반적으로 LAN에서 사용되는 케이블이다. 광파이버보다 가격이 저렴하고, 구리 특성상 광파이버보다 비교적 굽히기 쉬워 좁은 곳에 배선하기 수월하다.

	   -광파이버 케이블: 광섬유로 제작된 케이블. UTP보다 신호의 안정과 통신속도가 훨씬 뛰어나지만 굽히기가 어렵다.

###인터페이스
: 컴퓨터가 송신할 데이터를 케이블에 맞는 신호로 변환하여 케이블로 전송하고, 케이블에서 수신받은 신호를 컴퓨터에서 사용하는 데이터로 변환하는 기계이다.

      -NIC 인터페이스: LAN용 케이블에 접속하기 위한 인터페이스이다. 최근의 가정용 PC 대부분은 처음부터 이 인터페이스가 부착되어있다.

      -DCE 인터페이스: WAN용 케이블에 접속하기 위한 인터페이스이다. 이것은 별도의 신호 변환기를 사용한다. 

##1계층에서 데이터를 신호로 바꾸어 송수신할 때...

###컴퓨터의 데이터 표현
: 컴퓨터는 데이터를 비트로 표현한다. 그러한 비트를 신호로, 신호를 다시 비트로 변환하는 기기가 바로 인터페이스이다.

###신호의 종류
: 신호에는 '아날로그 신호'와 '디지털 신호'가 있다. 아날로스 신호는 '파장', 디지털 신호는 'ON과 OFF'로 생각하면 이해하기 수월하다. 

-디지털 신호
      -컴퓨터 통신에서 비트를 가장 편리하게 표현할 수 있는 신호이다. 
      -비트는 '0'과 '1'로 이루어졌다. 이를 디지털 신호로 표현하는 방법은 이미 정해진 전압을 넘는 신호는 '1', '0'인 경우는 전압의 변화가 없는 식으로 표현한다.
      -신호와 비트의 대비는 RZ(Return to Zero)부호라고 불리는 방법이며, 다른 것도 존재한다.

###신호의 형태와 전송방법에 따라 통신속도가 결정된다. 
: 통신속도는 일반적으로 1초 동안 전해지는 비트 수로 표현되는 경우가 많다. 
      -단위는 bps(bit per second)이다.
      -예를 들면 신호 한 번에 1초 걸린다고 하면 1초 동안에 1비트를 표현했으므로 1bps로 표현할 수 있다. 그리고 1초 동안에 2비트를 표현한다고 하면 한 번의 신호로 '0','1'뿐만 아니라 '00','01'을 표현할 수 있게 되는데 한 번의 신호로 2배인 2비트를 표현할 수 있다. 
      -현재는 기술의 발달로 40,000,000bps 이상의 통신속도가 가능하다. 
###주의할 점
: 신호가 너무 짧아진다거나 신호 하나로 너무 많은 것을 표현하면 수신자 측에서 바르게 식별하지 못랗 수도 있으며, 거기에 신호에 문제가 발생할 수 있다.

###신호에 발생하는 3가지 문제점

1. 신호의 감쇠
   전기신호를 동선을 통해서 송신할 때 발생하는 현상이다. 
   동선에 전기신호를 보내는데 그 과정에서 저항이 발생한다. 그래서 긴 케이블을 지나는 동안 신호가
   약해지는데 그렇게 되면 신호의 진폭이 약해져 수신측에서 신호를 읽지 못할 수도 있다.
   그래서 장거리로 운반하는 경우 도중에 '약해진 신호를 본래 상태로 되돌리기'위한'증폭'이라는 처리를 
   하는 기계를 중간에 설치한다. 
   
2. 노이즈/간섭
   전기신호가 어떤 원인에 의해 형태가 무너져버리는 현상이다. 그 결과 신호의 진폭을 정확하게 
   읽을 수 없게 될 가능성이 있다.
   예를 들어 근처에 큰 전원이 있거나, 고온 물체가 옆에 있거나(열 잡음), 바로 가까이에 신호를
   보내는 또 다른 케이블이 있거나(크로스 토크: 신호 누설), 번개나 무선 등 전자파가 발생하는
   물체가 있거나 등이 있다.
   이런 노이즈나 간섭의 원인으로부터 케이블을 멀리 두거나 케이블에 특수 가공을 해서 신호가 
   망가지는 것을 막을 필요가 있다. 
   그러나 이와 같은 노이즈나 간섭은 전기적인 요인에서 오는 것이기에 빛을 이용하여 통신하는 
   광파이버 케이블은 이들 노이즈나 간섭을 받지 않는다.

3. 충돌
   주로 멀티액세스 네트워크(T자 분배기 등) 등에서 일어나는 문제이다.
   신호가 보내지고 있는 도중에 다른 신호를 보내는 경우 전기신호가 뒤섞여서 진폭이 붕괴되는
   현상이다. 간단히 설명하면 A라는 컴퓨터가 신호를 보내고 있을 때 다른 B라는 컴퓨터가 또 다른 신호를
   보내버리는 것. 
   이에 대한 해결책은 두 가지가 있다.
   1. 신호를 보내는 타이밍을 서로 엇갈리게 하는 방법
   2. 신호가 지나가는 길을 나누는 방법

###Point
-1계층의 역할은 케이블이 연결되어 있는 기기에 신호를 전달하는 것이다.
-1계층의 역할에 의해 상대에게 데이터가 전달된다.
-통신매체에는 유선과 무선이 있고 유선에는 동선 UTP와 광파이버가 있다.
-비트를 신호로 바꾸어 케이블에 보냄으로써 상대에게 전한다.
-신호의 형태나 전송 방법에 의해 통신속도가 정해진다.
-신호는 감쇠, 노이즈/간섭, 충돌 등의 문제가 발생한다.
***
##2계층에 대하여...

###2계층의 역할
: 세그먼트 범위에서 데이터 전송에 관한 규정을 관리한다. 쉬운 말로 하면 데이터를 어떻게 송수신할지를 생각하는 역할을 한다.

###참고
: 패킷 교환기인 라우터를 통해 세그먼트를 넘어 다른 세그먼트로 데이터를 전송하는 것은 3계층의 역할이다.

###1계층과 2계층의 상호작용
: 1계층에서 다루는 신호와 케이블 등에 따라 2계층의 규격이 달라지게 된다. 규격을 간단히 분류하면 LAN용과 WAN용이 있다.

###참고
: 3계층 이상의 계층에서는 LAN이나 WAN이나 동일한 규칙을 사용한다.

      -LAN용(이더넷) 규격
            -프레이밍(프레임화): 1계층에서 주고받는 신호를 비트화해 거기에 의미를 갖게 하여 데이터로 취급할 수 있게 하는 것을 뜻한다.
                  -프리엠블: 프레이밍 과정에서 송신측과 수신측 양쪽에서 비트를 읽는 타이밍을 일치시키기 위한 신호를 보내는 것. 수신측은 데이터가 시작되는 시점을 학습하고 비트를 읽을 타이밍을 이 프리엠블에 맞춘다. 이더넷의 경우 '1'과'0'을 교대로 프리엠블로 보낸다.
                  -동기 통신: 데이터를 송수신하지 않는 상태에서 클락 신호(타이밍을 맟주는 신호)를 계속해서 보내는 방법. 이 방식에선 프리엠블은 사용하지 않는다. 항상 신호를 보내는 수고가 필요하기 때문에 별로 사용되지 않는다.

###주소(Address)
      -데이터를 보내는 상대와 자신을 특정하는 데이터. 수신처와 송신처의 출처(주소)를 알려준다.
      -주소는 데이터 전송 방법에 따라 3종류가 있다. 
       1. 유니캐스트(Uni-casst)주소: 특정한 1대를 지정하는 주소
            -가장 일반적인 주소이며 각각의 기기는 유니캐스트 주소를 적어도 한 개 갖고 있다. 다른 기기는 그 기기에 데이터를 송신하게 된다.
            -라우터같이 복수의 인터페이스를 갖고 있는 기기는 인터페이스마다 유니캐스트 주소를 갖는다.
            -유니캐스트 주소는 유일해야 한다. 같은 유니캐스트 주소는 가진 기기가 여러 개 있는 경우 수신처를 특정지을 수 없기 때문이다.
       2. 브로드캐스트(Broadcast)주소: 전체를 수신자로 사용하는 주소
            -유니캐스트 주소와 다르게 같은 주소를 가진 기기가 여러 개 있어도 된다. 특정 개인에게 보내는 것이 아닌, 특정 '그룹'에 속한 기기들에게 송신하는 것이기 때문이다.
            -멀티캐스트 그룹에 속한 기기는 유니캐스트 주소와 멀티캐스트 주소 총 2개의 주소를 갖게 된다.
       3. 멀티캐스트(Multicast)주소: 수신처 그룹을 나타내는 주소

###MAC 주소(Media Access Control Address)
      -정의: 인터페이스에 지정된 고정 주소
      -MAC 주소는 48비트 값으로, 4비트마다 16진수로 고쳐서 쓴다.
      -MAC 주소의 선두 24비트는 벤더코드라고 불리는 인터페이스를 제조한 메이커의 번호이다.(어느 메이커가 만든)
      -MAC 주소의 후반 24비트는 제조한 메이커가 붙인 번호(멘더 할당 코드)이다.(몇 번째 인터페이스)




































